【程序1】 TestRabbit.java 
题目：古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ 
1.程序分析： 兔子的规律为数列1,1,2,3,5,8,13,21....
package C;
import java.util.Scanner;

public class TestRabbit {
	
	public static void main(String[] args) {
		System.out.println("请输入月份");
		Scanner Sc=new Scanner(System.in); 
		int n = Sc.nextInt();
		System.out.println("该月有兔子"+cp(n)+"只");
	}
	//第三月开始，兔子数为前两月兔子数之合
	public static int cp(int n){
	    if(n<=0){
		   return -1;
              }
		else if(n==1||n==2){
		   return 1;
		   }
		else{
			return cp(n-1)+cp(n-2);
			}
		}

}

【程序2】 FindPrimeNumber.java 
题目：判断101-200之间有多少个素数，并输出所有素数。 
1.程序分析：判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除， 
则表明此数不是素数，反之是素数。
package C;

import java.util.Scanner;

public class FindPrimeNumber {

	public static void main(String[] args) {
		int i;
		int j;
		//素数数量
		int count=0;
		//能被整除数，判定是否为素数
		int d=0;
	for(i=101;i<=200;i++){
		for(j=2;j<i;j++){			
			if(i%j==0) {
                 d++;
                 break;
			}
		}
		if(d==0) {
			System.out.println("素数有"+i);
			count++;				
		}
		//使其还原，下次重新判定
		d=0;
	 }
	System.out.println("数量为:"+count);
	}
}

【程序3】FindDaffodilNumber.java 
题目：打印出所有的"水仙花数"，所谓"水仙花数"是指一个三位数，其各位数字立方和等于该数本身。例如： 
153是一个"水仙花数"，因为153=1的三次方＋5的三次方＋3的三次方。 
1.程序分析：利用for循环控制100-999个数，每个数分解出个位，十位，百位。
package C;

public class FindDaffodilNumber {
	

	public static void main(String[] args) {
		int a;
		int b;
		int c;
	//a百位,b十位,c个位
	for(a=1;a<=9;a++) {
		for(b=0;b<=9;b++) {
			for(c=0;c<=9;c++) {
				int i= a * 100 + b * 10 + c;
				int j= a * a * a + b * b * b + c * c * c;
				if(i==j) {
					System.out.println(i);
					continue;
				}
			} 
		}
	  }
	}
}

【程序4】FenJie.java 
题目：将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。 
程序分析：对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成： 
(1)如果这个质数恰等于n，则说明分解质因数的过程已经结束，打印出即可。 
(2)如果n<>k，但n能被k整除，则应打印出k的值，并用n除以k的商,作为新的正整数你n,重复执行第一步。 
(3)如果n不能被k整除，则用k+1作为k的值,重复执行第一步。
package C;

import java.util.Scanner;

public class FenJie {

	public static void main(String[] args) {
		Scanner Sc = new Scanner(System.in);
		int n = Sc.nextInt();
		System.out.print("=");
		int k;
		int p;
		for (k = 2; k <= n; k++) {
			while (n % k == 0) {
				if (k == n) {
					System.out.print(n);
				} else {
					System.out.print(k + "*");
					n = n / k;
					// 重新试验这个数能否继续被整除
					k = 2;
				}
				k++;
			}
		}
	}
}

【程序5】 ConditionOperator.java 
题目：利用条件运算符的嵌套来完成此题：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。 
1.程序分析：(a>b)?a:b这是条件运算符的基本例子。
package C;

import java.util.Scanner;

public class ConditionOperator {
	public static void main(String[] args) {
		 Scanner Sc=new Scanner(System.in); 
		  int n = Sc.nextInt();
		  //嵌套，先判断是否及格
		  System.out.println(n>=90 ?"A":(n<60 ?"C":"B"));
	}
}

【程序6】GcdTest.java辗转相除法 
题目：输入两个正整数m和n，求其最大公约数和最小公倍数。 
1.程序分析：利用辗除法。
package C;

import java.util.Scanner;

public class GcdTest {
	public static void main(String[] args) {
		 Scanner Sc=new Scanner(System.in); 
		  int m = Sc.nextInt();
		  int n = Sc.nextInt();
		  int o = m*n;
		  int b;
		  /*最大公约数:用较大的数除以较小的数。若余数不为零，
		  则将余数和较小的数构成新的一对数，继续上面的除法，直到大数被小数除尽，
		  则这时较小的数就是原来两个数的最大公约数。*/
		  if(m>n) {
			 do {
				 b=m%n;
				 m=n;
				 n=b;;
			 }while(b!=0);
			 System.out.println("最大公约数为"+m);
			//最小公倍数:最小公倍数就是两个数的乘积除以最大公约数。
			 int p=o/m;
			 System.out.println("最小公倍数为"+p);
		  }else {
			 do {
			  b=n%m;
			  n=m;
			  m=b;
		  }while(b!=0);
			 System.out.println("最大公约数为"+n);
			 int p=o/n;
			 System.out.println("最小公倍数为"+p);
		  }		  		  
	}
}

【程序7】 StChar.java 
题目：输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。 
1.程序分析：利用while语句,条件为输入的字符不为'n'.
package C;

import java.util.Scanner;

public class StChar {
	 public static void main(String[] args) {
        int num=0,chartra=0,blak=0,other=0;
        System.out.println("请输入字符串");
        Scanner s=new Scanner(System.in);
        //读字符串
        String result=s.nextLine();
        //获取字符串长度方法length()
        for(int i=0;i<result.length();i++){
        	//获取字符串中的第i个字符方法charAt(i)
        	char ch = result.charAt(i);
        	//判断是否是数字
               if(Character.isDigit(ch)) {
		              num++;
		              }else if(Character.isLetter(ch)){//判断是否是字母
                      chartra++;
		        }else if(Character.isSpace(ch)){//判断是否是空格
		              blak++;
		              }else{
		             other++;
		              }
        }
        System.out.println("数字的个数是"+num);
        System.out.println("英文字母的个数是"+chartra);
        System.out.println("空格的个数是"+blak);
        System.out.println("其他字符的个数是"+other);
	 }
}

【程序8】 TestAdd.java 
题目：求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加有键盘控制。 
1.程序分析：关键是计算出每一项的值。
package C;

import java.util.Scanner;

public class TestAdd {

	public static void main(String[] args) {
	  Scanner Sc=new Scanner(System.in); 
	  int m = Sc.nextInt();//m为a的值
	  int n = Sc.nextInt();//n为位数
	  int b=0;
	  int m1=m;
	  int a;
	  for(a=0;a<n;a++) {
		   b=b+m;
		   m=m*10+m1;
		   System.out.println(b);
	 }	 
	 
	}	
}

【程序9】 WanShu.java 
题目：一个数如果恰好等于它的因子之和，这个数就称为"完数"。例如6=1＋2＋3.编程 找出1000以内的所有完数。
package C;

public class WanShu {

	public static void main(String[] args) {
	    int a;
	    int b;
	    
	    for(a=2;a<=1000;a++) {
	    	int c=0;
	    	for(b=1;b<a;b++) {
	    		//判断是否为因子
	    		if(a%b==0) {	    			
	    			c=b+c;
	    		}
	    	}
	    	if(c==a) {
	    		System.out.println(a);
	    	}
	    }
		
	}
}

【程序10】TestBall.java 
题目：一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？
package C;

public class TestBall {

	public static void main(String[] args) {
	double a;
	double b=100;
	double c=0;
	double d=0;
	for(a=0;a<10;a++) {		
		d=d+c+b;//落地走米数
		c=b/2;//反弹高度
		b=c;//下次落地高度	
	}
	System.out.println("第十次落地走"+d+"米");
	System.out.println("第十次反弹"+c+"米");
	}
}

【程序11】 TestTN.java 
题目：有1、2、3、4个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？ 
1.程序分析：可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去 掉不满足条件的排列。
package C;

public class TestTN {

	public static void main(String[] args) {
		int a;
		int b;
		int c;
		int d;
	//a百位,b十位,c个位
	for(a=1;a<=4;a++) {
		for(b=1;b<=4;b++) {
			for(c=1;c<=4;c++) {
				//使各位数不同
                  if(a!=b&&b!=c&&a!=c) {
                	  d=100*a+10*b+c;
                	  System.out.println(d);
                  }
			  }
			}
		}
	}
}

【程序12】 MoneyAward.java 
题目：企业发放的奖金根据利润提成。利润(I)低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万到60万之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%，高于100万元时，超过100万元的部分按1%提成，从键盘输入当月利润I，求应发放奖金总数？ 
1.程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成长整型。
package C;

import java.util.Scanner;

public class MoneyAward {

	public static void main(String[] args) {
		System.out.println("请输入利润(万元)");
		Scanner Sc=new Scanner(System.in); 
		long n = Sc.nextInt();
		System.out.println("奖金为:");
		long m;
		//分段获得奖金
		if(n<=10) {
			//强转类型
			m=(long) (n*0.1);
			System.out.println(m);
		}else if(10<n&&n<=20) {
			m=(long) (10*0.1+(n-10)*0.075);
			System.out.println(m);
		}else if(20<n&&n<=40){
			m=(long) (10*0.1+10*0.075+(n-20)*0.05);
			System.out.println(m);
	    }else if(40<n&&n<=60) {
	    	m=(long) (10*0.1+10*0.075+20*0.05+(60-n)*0.03);
	    	System.out.println(m);
	    }else if(60<n&&n<=100) {
	    	m=(long) (10*0.1+10*0.075+20*0.05+20*0.03+(100-n)*0.015);
	    	System.out.println(m);
	    }else if(n>100) {
	    	m=(long) (10*0.1+10*0.075+20*0.05+20*0.03+40*0.015+(n-100)*0.01);
	    	System.out.println(m);
	    }
	}
}

【程序13】FindNumber.java 
题目：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？ 
1.程序分析：在10万以内判断，先将该数加上100后再开方，再将该数加上268后再开方，如果开方后的结果满足如下条件，即是结果。请看具体分析：
package C;

public class FindNumber {
	private static double obj;

	public static void main(String[] args) {
	    int a;
	    int b;
	    int c;
        for(a=1;a<=100000;a++) {
        	//强转b和c为int类型
        	b=(int) Math.sqrt(a+100);
        	c=(int) Math.sqrt(a+168);
        	//若满足条件则原来就为整形
        	if(a==(b*b-100)&&a==(c*c-168)) {
        		System.out.println("该数是"+a);
        	}
        }       	
        }
}

【程序14】 TestDay.java 
题目：输入某年某月某日，判断这一天是这一年的第几天？ 
1.程序分析：以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。
package C;

import java.util.Scanner;

public class TestDay {
	public static void main(String[] args) {
	System.out.print("请输入某年某月某日");
	Scanner sc = new Scanner(System.in).useDelimiter("\\s");
	int year = sc.nextInt();
	int month = sc.nextInt();
	int day = sc.nextInt();//当月天数
	System.out.print("输入的日期为:"+year+"年"+month+"月"+day+"日");
	System.out.println("该日期是一年的第"+calculateDays(year, month, day)+"天!");
}
private static int calculateDays(int year, int month, int day)
{
	//使月数与天数符合要求
	if((12 < month)||(0 > month)||(31 < day)||(0 > day)){
		System.out.print("输入数据无效!!");
		System.exit(-1);
	}
    int first = 0;
	int[] days = null;
	int[] days1 = new int[]{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};//非闰年
	int[] days2 = new int[]{31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};//闰年
     //整百年闰年与非整百年闰年
	if((0 == year%400)||((0 == year%4)&&(0 != year%100))){
		days = days2;
	}else {
		days =days1;
	}
	
	//输入天数大于2月天数
	if(days[1] < day) {
		System.out.print("输入数据无效!!");
		System.exit(-1);
	
	}
	for (int i=0;i<month-1; i++) {
		//前几月天数和
		first += days[i];
	}
	return (first + day);
	}
}

【程序15】Sort.java 
题目：输入三个整数x,y,z，请把这三个数由小到大输出。 
1.程序分析：我们想办法把最小的数放到x上，先将x与y进行比较，如果x>y则将x与y的值进行交换，然后再用x与z进行比较，如果x>z则将x与z的值进行交换，这样能使x最小。
package C;

import java.util.Scanner;

public class Sort {

	public static void main(String[] args) {
		System.out.print("请输入三个数x,y,z：");
		Scanner sc = new Scanner(System.in);
		int x = sc.nextInt();
		int y = sc.nextInt();
		int z = sc.nextInt();
		int t;
		//while循环不停交换致符合要求
		while(x>=y) {
			t=x;
			x=y;
			y=t;
		 }
		while(y>=z){
			t=y;
			y=z;
			z=t;
		 }
		 while(x>=z) {
			t=x;
			x=z;
			z=t;
		 }
	System.out.print("从小到大排列为："+x+y+z);
	}
}

【程序16】Nine.java 
题目：输出9*9口诀。 
1.程序分析：分行与列考虑，共9行9列，i控制行，j控制列。
package C;

import java.util.Scanner;

public class Nine {
	public static void main(String[] args) {
		    int i;
		    int j;
		    //共九行
			for(i=1;i<=9;i++) {	
				//第i行
			    for(j=i;j<=9;j++) {
			        System.out.print(+i+"*"+j+"="+(i*j)+"  ");	        
			}
			    System.out.println("\n");
			}
	}
}

【程序17】MonkeyEatPeach.java 
题目：猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个 第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。 
1.程序分析：采取逆向思维的方法，从后往前推断。
package C;

public class MonkeyEatPeach {

	public static void main(String[] args) {
		int a;
		int b=1;
		//设方程计算得前一天剩下苹果是后一天剩下的2倍多2个
		for(a=1;a<10;a++) {
			b=2*b+2;
		}
		System.out.println("吃了桃子"+b+"个");
	}
}

【程序18】 Prog.java 
题目：两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。a说他不和x比，c说他不和x,z比，请编程序找出三队赛手的名单。 
1.程序分析：判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除， 则表明此数不是素数，反之是素数。
package C;

public class Prog {
	
	public static void main(String[] args) {
	//令x,y,z为1,2,3
      int x=1;
      int y=2;
      int z=3;
      int a,b,c;
      System.out.println("x为1，y为2，z为3");
      for(c=1;c<=3;c++) {
    	  if(c!=1&&c!=3) {
    	  for(a=1;a<=3;a++)
           if(a!=1) {
        	  for(b=1;b<=3;b++) {     		 
        		  System.out.println(+a+"与a比赛"+""+b+"与b比赛"+""+c+"与c比赛");
        	  }
           }
    	  }
   }
   }
}

【程序19】LingXing.java 
题目：打印出如下图案（菱形） 
      * 
    *** 
  ***** 
******* 
  ***** 
    *** 
      * 
1.程序分析：先把图形分成两部分来看待，前四行一个规律，后三行一个规律，利用双重 for循环，第一层控制行，第二层控制列。
package C;

public class LingXing {

	public static void main(String[] args) {
		int i,j;
		//打印上四层等腰三角形
		for(i=0;i<=3;i++)
		{
		for(j=0;j<=2-i;j++)
			System.out.print(" ");
		for(j=0;j<=2*i;j++)
			System.out.print("*");
		System.out.print("\n");
		}
		//打印下三层等腰三角形
		for(i=0;i<=2;i++)
		{
		for(j=0;j<=i;j++)
			System.out.print(" ");
		for(j=0;j<=4-2*i;j++)
			System.out.print("*");
		System.out.print("\n");
		}
	}
}

【程序20】TestAdd2.java 
题目：有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和。 
1.程序分析：请抓住分子与分母的变化规律。
package C;

public class TestAdd2 {

	public static void main(String[] args) {
		int n;
		double p = 0;
		double x;
		for(n=1;n<=20;n++) {		  
		  x = co(n)/cp(n);
		  p = p + x;//和
	}
		System.out.println("前20项和为"+p);
	}
	//分子
	public static double co(double n){
	    if(n<=0){
		   return -1;
              }
		else if(n==1||n==2){
			n=n+1;
		   return n;
		   }
		else{
			return co(n-1)+co(n-2);
			}
		}
	//分母
	public static double cp(double n){
	    if(n<=0){
		   return -1;
              }
		else if(n==1||n==2){
		   return n;
		   }
		else{
			return cp(n-1)+cp(n-2);
			}
		}
}

【程序21】TestJieCheng.java 
题目：求1+2!+3!+...+20!的和 
1.程序分析：此程序只是把累加变成了累乘。
package C;

public class TestJieCheng {

	public static void main(String[] args) {
		int i;
		int j;
		int a=1;
		int b=0;
		for(i=1;i<=20;i++) {
			for(j=1;j<=i;j++) {
				//i的阶乘
				a = a*j;
			}
			//求和
			b = b+a;
		}
		System.out.println("1+2!+3!+...+20!的和为"+b);
	}
}

【程序22】TestJieCheng2.java 
题目：利用递归方法求5!。 
1.程序分析：递归公式：fn=fn_1*4!
package C;

public class TestJieCheng2 {

	public static void main(String[] args) {
		int i;
		int j=1;
		for(i=1;i<=5;i++) {
			//求阶乘
			j = j*i;
		}
		System.out.println("5!为"+j);
	}
	
}

【程序23】TestAge.java 
题目：有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？ 
1.程序分析：利用递归的方法，递归分为回推和递推两个阶段。要想知道第五个人岁数，需知道第四人的岁数,依次类推，推到第一人（10岁），再往回推。
package C;

public class TestAge {

	public static void main(String[] args) {
		int i;
		int j=10;//第一个人年龄
		for(i=1;i<=4;i++) {
			//求前一个人年龄
			j = j+2;
		}
		System.out.println("第五个人为"+j+"岁");
	}
}

【程序24】TestNumber.java 
题目：给一个不多于5位的正整数，要求：一、求它是几位数，二、逆序打印出各位数字。
package C;

import java.util.Scanner;

public class TestNumber {

	public static void main(String[] args) {
		System.out.print("请输入一个不多于5位数：");
		Scanner sc = new Scanner(System.in);
		int i = sc.nextInt();
		
		int a,b,c,d,e;//万，千，百，十，个
		int f;//等于i
		
		if(10000<=i&&i<=99999) {
			System.out.println("这是五位数");
			for(a=0;a<=9;a++) {
				for(b=0;b<=9;b++) {
					for(c=0;c<=9;c++) {
						for(d=0;d<=9;d++) {
							for(e=0;e<=9;e++) {
								f=a*10000+b*1000+c*100+d*10+e;
							if(f==i) {
								System.out.println("逆序输出数字为："+e+d+c+b+a);
							}
							}						
						}
					}
				}
			}
		}else if(1000<=i&&i<=9999) {
			System.out.println("这是四位数");
				for(b=0;b<=9;b++) {
					for(c=0;c<=9;c++) {
						for(d=0;d<=9;d++) {
							for(e=0;e<=9;e++) {
								f=b*1000+c*100+d*10+e;
							if(f==i) {
								System.out.println("逆序输出数字为："+e+d+c+b);
							}
							}						
						}
					}
				}
		}else if(100<=i&&i<=999) {
			System.out.println("这是三位数");
				for(c=0;c<=9;c++) {
					for(d=0;d<=9;d++) {
						for(e=0;e<=9;e++) {
							f=c*100+d*10+e;
						if(f==i) {
							System.out.println("逆序输出数字为："+e+d+c);
						}
						}						
					}
				}
		}else if(10<=i&&i<=99) {
			System.out.println("这是二位数");
				for(d=0;d<=9;d++) {
					for(e=0;e<=9;e++) {
						f=d*10+e;
					if(f==i) {
						System.out.println("逆序输出数字为："+e+d);
					}
					}						
				}
		}else {
			System.out.println("这是一位数");
			System.out.println("逆序输出数字为："+i);
		}
		
		
			
		}
}

【程序25】 HuiWenShu.java 
题目：一个5位数，判断它是不是回文数。即12321是回文数，个位与万位相同，十位与千位相同。
package C;

import java.util.Scanner;

public class HuiWenShu {

	public static void main(String[] args) {
	System.out.print("请输入一个5位数：");
	Scanner sc = new Scanner(System.in);
	int i = sc.nextInt();
	
	int a=i/10000;//万
	int b=(i%10000)/1000;//千
	int c=(i%1000)/100;//百
	int d=(i%100)/10;//十
	int e=(i%10);//个
	
		if(a==e&&b==d) {
			System.out.println("该数为回文数");
		}else {
			System.out.println("该数不为回文数");
		}	
	}
}

【程序26】Ex26.java (跳过了，好没意思的题啊) 
题目：请输入星期几的第一个字母来判断一下是星期几，如果第一个字母一样，则继续 判断第二个字母。 
1.程序分析：用情况语句比较好，如果第一个字母一样，则判断用情况语句或if语句判断第二个字母。
【程序27】 SuShu.java(详见【程序2】 FindPrimeNumber.java) 
题目：求100之内的素数
package C;

public class SuShu {

	public static void main(String[] args) {
		int i;
		int j;
		//素数数量
		int count=0;
		//能被整除数，判定是否为素数
		int d=0;
	for(i=2;i<=100;i++){
		for(j=2;j<i;j++){			
			if(i%j==0) {
                 d++;
                 break;
			}
		}
		if(d==0) {
			System.out.println("素数有"+i);
			count++;				
		}
		//使其还原，下次重新判定
		d=0;
	 }
	System.out.println("数量为:"+count);
	}
}

【程序28】 TestSort.java 
题目：对10个数进行排序 
1.程序分析：可以利用选择法，即从后9个比较过程中，选择一个最小的与第一个元素交换， 下次类推，即用第 
二个元素与后8个进行比较，并进行交换。
package C;

import java.util.Scanner;

public class TestSort {

	public static void main(String[] args) {
	System.out.print("请输入10个数：");
	Scanner sc = new Scanner(System.in);
	int a = sc.nextInt();
	int b = sc.nextInt();
	int c = sc.nextInt();
	int d = sc.nextInt();
	int e = sc.nextInt();
	int f = sc.nextInt();
	int g = sc.nextInt();
	int h = sc.nextInt();
	int i = sc.nextInt();
	int j = sc.nextInt();
	int[] x=new int[] {a,b,c,d,e,f,g,h,i,j};
	int l;
	//共做8轮比较循环
	for(int k=0;k<=8;k++) {
		for(int m=k+1;m<=9;m++) {
		//比较这轮x[k]与后面所有数大小，把最小的放到最前面
		while(x[k]>x[m]) {
			l=x[k];
			x[k]=x[m];
			x[m]=l;			
		 }
	   }
	}
	System.out.print("从小到大排列为："+x[0]+x[1]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8]+x[9]);
	}
}

【程序29】 TestAdd3.java 
题目：求一个3*3矩阵对角线元素之和 
1.程序分析：利用双重for循环控制输入二维数组，再将a[i][i]累加后输出。
package C;

import java.util.Scanner;

public class TestAdd3 {

		public static void main(String[] args) {
			System.out.println("请输入矩阵：");
	        int[][] a = new int[3][3];
	        //输入矩阵
	        Scanner Sc=new Scanner(System.in); 
	        for(int i=0;i<=2;i++) {
	        	for(int j=0;j<=2;j++) {
	        	  a[i][j] = Sc.nextInt();
	        	}
	        }
	        int sum1 = 0;
	        int sum2 = 0;
	        for(int i=0;i<3;i++) {
	          for(int j=0;j<3;j++){
	            if(i==j) {
	            	//左对角线
	            	sum1 += a[i][j];
	            }
	            if(j==2-i) {
	            	//右对角线
	            	sum2 += a[i][j];
	            }
	          }
	        }
	        System.out.println("矩阵对角线之和分别是："+sum1+"和"+sum2);
	}
}

【程序30】 ArraySort.java 
题目：有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中。 
1. 程序分析：首先判断此数是否大于最后一个数，然后再考虑插入中间的数的情况，插入后此元素之后的数， 
依次后移一个位置。
package C;

import java.util.Arrays;
import java.util.Scanner;

public class ArraySort {

	public static void main(String[] args) {
		System.out.println("起始数据:2,5,9,45,687,997,7845,59876,784563");
		int[] a=new int[] {2,5,9,45,687,997,7845,59876,784563};
		 Scanner Sc=new Scanner(System.in);
		 System.out.print("请输入加入数据:");
		 int n = Sc.nextInt();
		 //把输入数字加入数组
		 int[] b=new int[] {2,5,9,45,687,997,7845,59876,784563,n};
		 //先于最后一位比较
		 if(n>=a[8]) {
			 System.out.println("结果为"+Arrays.toString(b));
		 }else {
			 //排序
			 for(int i=0;i<=9;i++) {
					for(int m=i+1;m<=9;m++) {
					//比较这轮a[i]与后面所有数大小，把最小的放到最前面
					while(b[i]>b[m]) {
						int l;
						l=b[i];
						b[i]=b[m];
						b[m]=l;			
					 }
				   }
				}
			 System.out.println("结果为:"+Arrays.toString(b));
		 }
		 
	}
}

【程序31】 ArrayConverse.java 
题目：将一个数组逆序输出。 
1.程序分析：用第一个与最后一个交换。
package C;

public class ArrayConverse {

	public static void main(String[] args) {
		System.out.println("数组为：5,8,9,1,8");
		int[] a=new int[] {5,8,9,1,8};
		System.out.print("数组逆序为：");
		for(int i=4;i>=0;i--) {	
			if(i==0) {
				System.out.print(+a[i]);
			}else
			System.out.print(+a[i]+",");
		}		
	}
}

【程序32】 Ex32.java 
题目：取一个整数a从右端开始的4～7位。 
程序分析：可以这样考虑： 
(1)先使a右移4位。 
(2)设置一个低4位全为1,其余全为0的数。可用~(~0<<4) 
(3)将上面二者进行&运算。
package C;

import java.util.Scanner;

public class Ex32 {
	
	public static void main(String[] args) {
		System.out.print("请输入一个数：");
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		if(-1000000<n&&n<0) {
			System.out.print("该数不符合要求");
		}else if(n>=0&&n<1000000) {
			System.out.print("该数不符合要求");
		}else {//数字符合要求
			if(n>0) {
			int i,i2,i3,i4,j,j2,j3,j4;
			i=n%10000000;
			j=i/1000000;//第7位
			i2=n%1000000;
			j2=i2/100000;//第6位
			i3=n%100000;
			j3=i3/10000;//第5位
			i4=n%10000;
			j4=i4/1000;//第4位
			System.out.print("第7位"+j+"\n"+"第6位"+j2+"\n"+"第5位"+j3+"\n"+"第4位"+j4);
			}else {
				int h;
				h=Math.abs(n);//去符号
				int i,i2,i3,i4,j,j2,j3,j4;
				i=h%10000000;
				j=i/1000000;//第7位
				i2=h%1000000;
				j2=i2/100000;//第6位
				i3=h%100000;
				j3=i3/10000;//第5位
				i4=h%10000;
				j4=i4/1000;//第4位
				System.out.print("第7位"+j+"\n"+"第6位"+j2+"\n"+"第5位"+j3+"\n"+"第4位"+j4);
			}
		}		
	}

}

【程序33】YangHui.java 
题目：打印出杨辉三角形（要求打印出10行如下图） 
1.程序分析：  
       1 
      1 1 
     1 2 1 
    1 3 3 1 
   1 4 6 4 1 
1 5 10 10 5 1
package C;

public class YangHui {

	public static void main(String[] args) {
		int i,j;
	    int[][] a=new int[11][11];
	    a[0][0]=1;
	    //非三边上数字
	    for(i=1;i<=10;i++) {
	    	for(j=1;j<=10;j++) {
	    		a[i][0]=1;
			a[i][j]=a[i-1][j-1]+a[i-1][j];
	    }
	    } 
	    //打印三角
	    for(i=0;i<=10;i++)
		{
		for(j=0;j<=8-i;j++)
			System.out.print(" ");
		for(j=0;j<=i;j++) {					
			System.out.print(+a[i][j]+" ");
		}
		System.out.print("\n");
		}
	}
}

【程序34】 略 前面更复杂的已经做过了 
题目：输入3个数a,b,c，按大小顺序输出。 
1.程序分析：利用指针方法。
【程序35】 ArrayChange.java 
题目：输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。
package C;

import java.util.Arrays;
import java.util.Scanner;

public class ArrayChange {

	public static void main(String[] args) {
		System.out.println("请输入5位数组：");
        int[] a = new int[5];
        Scanner Sc=new Scanner(System.in); 
		for(int i=0;i<=4;i++) {
			a[i]=Sc.nextInt();
		}
		//取最大数下标max与最小数下标min
		int max=0,min=0;
		for(int i=0;i<=4;i++) {	
			//max取较大数的坐标
		    if(a[max]<a[i]) {
				max=i;
			}
		    //min取较小数的坐标
			if(a[i]<a[min]) {
				min=i;
			}			
		}
		if(max==4&&min==0) {
			int t;
			t=a[0];
			a[0]=a[4];
			a[4]=t;			
		}else {
			int t1,t2;
			t1=a[0];
			a[0]=a[max];
			a[max]=t1;
			t2=a[4];
			a[4]=a[min];
			a[min]=t2;			
		}
		System.out.println("交换位置后5位数组为："+Arrays.toString(a));
	}
}

【程序36】 Array1.java 
题目：有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数
package C;

import java.util.Arrays;
import java.util.Scanner;

public class Array1 {

	public static void main(String[] args) {
		//默认n=5
		System.out.println("请输入5位数组：");
        int[] a = new int[5];
        Scanner Sc=new Scanner(System.in); 
		for(int i=0;i<=4;i++) {
			a[i]=Sc.nextInt();
		}
		System.out.println("请输入后移位数m：");
		    int m;
            m=Sc.nextInt();
            if(m>=1&&m<=4) {
            	//后移m位
            	int[] b=new int[] {a[(5-m)%5],a[(6-m)%5],a[(7-m)%5],a[(8-m)%5],a[(9-m)%5]};
            	System.out.println("后移m位数后："+Arrays.toString(b));            	
            }else {
            	System.out.println("该m值不符合要求：");
            }
	}
}

【程序37】 Test3Quit.java 
题目：有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下 
的是原来第几号的那位。
package C;

import java.util.Scanner;

public class Test3Quit {

	public static void main(String[] args) {
		 int[] a=new int[50];
		 int i,n,count;
		 int flag=0;
		 Scanner Sc=new Scanner(System.in);
		 System.out.println("请输入n：");
		 n = Sc.nextInt();
		 count=n;
		 
		 for (i=1; i<=n; i++)
				a[i]=1;//所有人都在圈内，为1 
			for (i=1;i>=1;i++){
				if (i==n+1)
					i=1;//如果i超出了n个人，让他重新回到1 				
				if (a[i]!=0) {
					flag++;
				}else{
					continue;
				}
				
				if (flag%3==0){
					a[i]=0;
					count--;
				}
				
				if (count==1)//表示只剩下一个人在圈内 
					break;
			    }
			    for (i=1; i<=n; i++)
				if (a[i]!=0)
					System.out.println("是原来的第"+i+"号");//这里是输出i
		} 
	}


【程序38】 TestLength.java 
题目：写一个函数，求一个字符串的长度，在main函数中输入字符串，并输出其长度。
package C;

public class TestLength {

	public static void main(String[] args) {
		String str="aadafsggergerg";
		System.out.println("字符串长度是"+str.length());
	}
}

【程序39】 Test2.java 
题目：编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,当输入n为奇数时，调用函数 
1/1+1/3+...+1/n(利用指针函数)
package C;

import java.util.Scanner;

public class Test2 {

	public static void main(String[] args) {
		int n;
	    Scanner Sc=new Scanner(System.in);
	    System.out.println("请输入正整数n：");
	    n = Sc.nextInt();
	    double k;
    	double p;
		double o=0;
	    if(n%2==0) {
	    	for(int i=1;i<=n/2;i++) {	    		
	    		k=(double)1/i;
	    		o=o+k;
	    		System.out.println(+o);
	    		p=(double)1/(double)2*o;//p为函数表达式计算结果
	    		System.out.println("函数计算结果为："+p);
	    	}
	    }else {

	    	for(int i=1;i<=(n+1)/2;i++) {
	    		k=(double)1/(2*i-1);
	    		o=o+k;
	    		p=o;
	    		System.out.println("函数计算结果为："+p);
	    	}
	    }	   
	}
}

【程序40】 Test3.java 
题目：字符串排序。
package C;

import java.util.Arrays;
import java.util.Scanner;

public class Test3 {

	public static void main(String[] args) {  
		 System.out.println("请输入字符串");
	        Scanner s=new Scanner(System.in);
	        //读字符串
	        String result=s.nextLine();
	        //字符串放入数组
	        char x[]=result.toCharArray();
	        //获取字符串长度方法length()     	
	        for(int i=0;i<result.length()-1;i++){
	        		for(int m=i+1;m<result.length();m++) {	        	
	            //比较这轮x[i]与后面所有数大小，把最小的放到最前面
	        		while(x[i]>x[m]) {
	        			char l;
	        			 l=x[i];
	        			 x[i]=x[m];
	        			 x[m]=l;			
	        		 }
	        	   }
	        	}	
	        System.out.println("从小到大排列为："+Arrays.toString(x));
	        }
	}


【程序41】 MonkeyPeach.java 
题目：海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子凭据分为五份，多了一个，这只猴子把多的一 
个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，又多了一个，它同样把多的一个扔入海中 
，拿走了一份，第三、第四、第五只猴子都是这样做的，问海滩上原来最少有多少个桃子？
package C;

import java.util.Arrays;

public class MonkeyPeach {

	public static void main (String[] args) { 
		int i,m,j=0,k,count; 
		for(i=4;i<10000;i+=4){
		  count=0; 
		  m=i;//代表原始个数
		  
		for(k=0;k<5;k++) { 
		j=i/4*5+1;//上次的个数 
		i=j;//令i表示上一次 
		if(j%4==0) { 
		count++; 
		 }else {
		   break;}
	   } 
		
		i=m; //回归原始个数
		if(count==4){
		System.out.println("原有桃子 "+j+" 个"); 
		break;//输出第一个j为最小一个，此时结束
		} 
	   } 
	} 
}

【程序42】 Test4.java 
题目：
其中??代表的两位数,8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。
package C;

public class Test4 {

	public static void main(String[] args) {
	
		for(int i=10;i<100;i++) {
			if(8*i<100&&9*i>100) {
				System.out.println("??为"+i);
				int j=809*i;
				System.out.println("809*??的结果为"+j);
			}
		}
	}	
}

【程序43】 Test5.java 
题目：求0—7所能组成的2位数以内奇数个数。
package C;

public class Test5 {
	public static void main(String[] args) {
		long i;
		int count = 0;
		for (i = 0; i <= 77; i++) {
			//求余得个位，题目要求0-7，则奇数个位为9舍去
			if (i % 10 == 1 || i % 10 == 3 || i % 10 == 5 || i % 10 == 7)
				count++;
		}
		System.out.println(count);
	}
}
【程序44】 TestEven.java 
题目：一个偶数总能表示为两个素数之和。
package C;

import java.util.Scanner;

public class TestEven {

	public static void main(String[] args){		
		System.out.print("请输入一个偶数：");
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
         if(n%2!=0){
                System.out.println("您输入的不是偶数！");
                return;
         }
         twoAdd(n);
         }
	
	//偶数分解为素数之和
		private static void twoAdd(int n){
			for(int i=2;i<n/2+1;i++){
				//两数均为素数
				if(suShu(i)&&suShu(n-i)){
					System.out.println("该偶数可由两个素数相加得到");
					break;
					}				
			}
		}
	
		//判断是否为素数
		public static boolean suShu(int num) {
			  boolean b = true;
			for (int j = 2; j < num; j++) {
				if (num % j == 0) {
					b = false;
					break;
			      }
			}
			return b;
		}
}
	
【程序45】TestPrime9.java 
题目：判断一个数能被几个9整除
package C;

import java.util.Scanner;

public class TestPrime9 {
	
	public static void main (String[] args) {
		 System.out.println("请输入一个正整数");
	        Scanner sc=new Scanner(System.in);
	        double n=sc.nextInt();
	        int count=0;
	        if(n%9==0) {
	        	
	        while(n/9>=1) {
	        	count++;
	        	//更新n
	        	n=n/9;
	        }
	        System.out.println("该数能被"+count+"个9整除");
	        }else {
	        	System.out.println("该数不能被9整除");
	        }
	}

}

【程序46】 TestString.java 
题目：两个字符串连接程序
package C;

import java.util.Scanner;

public class TestString {

	public static void main (String[] args) {
		 System.out.println("请输入第一个字符串：");
	        Scanner sc=new Scanner(System.in);
	        //读第一个字符串
	        String result1=sc.nextLine();
	     System.out.println("请输入第二个字符串：");
	        //读第二个字符串
	        String result2=sc.nextLine();
	        //连接字符串
	        String result=result1+result2;
	        System.out.println("输出字符串为："+result);
	}
}

【程序47】 TestPrint.java 
题目：读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的＊。
package C;

import java.util.Random;
import java.util.Scanner;

public class TestPrint {
	
	public static void main (String[] args) { 
		System.out.println("请依次输入7个正整数：");
		 Scanner Sc=new Scanner(System.in); 
		    int[] a = new int[7];
		    int i;
	        for(i=0;i<=6;i++) {
	          a[i]= Sc.nextInt();
	        }
	      
	        for(i=0;i<=6;i++) {
	        	//要求数数字1-50
	        if(a[i]>=1&&a[i]<=50) {
	        	//一次打印输入个数个*
	        	for(int j=0;j<a[i];j++) {
	        		System.out.print("*");	
	        	}
	        	//换行
	        	System.out.println("");
	        }else {
	        	System.out.println("该数不符合要求");	
	        }   
	        }    
	}

}

【程序48】 TestCode.java 
题目：某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字 
都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。
package C;

import java.util.Scanner;

public class TestCode {
	
	public static void main (String[] args) {
	System.out.println("请输入密码(4位正整数)：");
	 Scanner Sc=new Scanner(System.in);
	       int n=Sc.nextInt();
	       
	       int a,b,c,d,e,f,g,h;
	       a=n/1000;//原左数第一位
	       b=(n%1000)/100;//原左数第二位
	       c=(n%100)/10;//原左数第三位
	       d=n%10;//原左数第四位	       
	       e= (a+5)%10;//现第四位
	       f= (b+5)%10;//现第三位
	       g= (c+5)%10;//现第二位
	       h= (d+5)%10;//现第一位
	   	System.out.println("加密后密码为："+h+g+f+e);  
	}
}

【程序49】 TestString2.java 
题目：计算字符串中子串出现的次数
package C;

import java.util.Scanner;

public class TestString2 {

	public static void main (String[] args) { 
			   Scanner sc = new Scanner(System.in);
			    System.out.print("请输入字符串");
			    String str1 = sc.nextLine();
			    System.out.print("请输入子字符串");
			    String str2 = sc.nextLine();
			    if(str1.equals("") || str2.equals("")){
			    System.out.println("你没有输入字符串或子字符串,无法比较");
			}else{
				int count = 0;
				//字符串首字符指针取值范围
				for(int i=0;i<str1.length()-str2.length()+1;i++)
				//判断字符串指针i到指针str2.length()+i之间的字符是否与子字符串相同
				if(str1.substring(i,str2.length()+i).equals(str2)) {
					count++;
				}	
				System.out.println("字符串中子字符串出现的次数为:"+count+"次");
			}
	}
}

【程序50】TestStu.java 
题目：有五个学生，每个学生有3门课的成绩，从键盘输入以上数据（包括学生号，姓名，三门课成绩），计算 
出平均成绩，将原有的数据和计算出的平均分数存放在磁盘文件"stud"中。
package C;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class TestStu {

	public static void main(String[] args) {
		
		
		//输入信息
		Scanner sc=new Scanner(System.in);
		int[] no = new int[5];
		String[] name = new String[5];
		double[][] grade = new double[5][3];
		for(int i=0;i<=4;i++) {
			int a=i+1;
			System.out.println("第"+a+"个学生：");
			 System.out.println("请输入学号：");
			 no[i]=sc.nextInt();
			 System.out.println("请输入姓名：");
			 name[i]=sc.next();
			 System.out.println("请输入3门成绩（语文0，数学1，英语2）：");
			 for(int j=0;j<=2;j++) {
				 grade[i][j]=sc.nextInt();
			 }
		}
		
		//平均数数组
		double[] average = new double[5];
		//临时字符串	
		for(int i=0;i<=4;i++) {
			System.out.print("学号："+no[i]);
			System.out.print("  ");
			System.out.print("姓名："+name[i]);
			System.out.print("  ");
			double sum=0;
			String data = null;
			 data= "学号："+no[i]+"  "+"姓名："+name[i]+"  ";
			 for(int j=0;j<=2;j++) {
				 sum=sum+grade[i][j];	
				 System.out.print("成绩"+j+":"+grade[i][j]);
				 System.out.print("  ");
				 //临时存放信息
				 data=data+"成绩"+j+":"+grade[i][j]+"  ";
			 }
			 //求平均数
			 average[i]=sum/3;
			 System.out.println("平均成绩"+average[i]);

			String datas= data+"平均成绩"+average[i]+"\r\n";
			 
        //使用字节流保存数据到txt
    	FileOutputStream fop = null;
    	  File file;
    	  try {	    	  
    	   file = new File("C:/Users/hp/Desktop/data.txt");
    	   fop = new FileOutputStream(file,true);	    	  
    	   // get the content in bytes
    	   //字节转换
    	   byte[] contentInBytes =datas.getBytes();
    	   BufferedOutputStream fp = new BufferedOutputStream(fop);
    	   fp.write(contentInBytes);
    	   fp.flush();
    	   fp.close();
    	   fop.close();
    	  
    	  } catch (IOException e) {
    	   e.printStackTrace();
    	  } 
	  }
	}
}
 
